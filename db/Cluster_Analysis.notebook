{"cells":[{"kind":2,"language":"saphanaconnectionmanagement","value":"#List database connections"},{"kind":2,"language":"saphanaconnectionmanagement","value":"#Show current database connection"},{"kind":1,"language":"markdown","value":"# Select some sample data\n"},{"kind":2,"language":"saphanasql","value":"select * from CHURN"},{"kind":2,"language":"saphanasql","value":"select * from CHURN order by rand() limit 10"},{"kind":1,"language":"markdown","value":"# Clustering with several attributes - no normalization - Run ID = 1"},{"kind":2,"language":"saphanasql","value":"DO BEGIN\n\nDECLARE lt_parameter TABLE(\n        NAME VARCHAR (50),\n        INT_VALUE INTEGER,\n        DOUBLE_VALUE DOUBLE,\n        STRING_VALUE VARCHAR (100));\n\n-- Clustering mit PAL\n\n/*\n * Aufbau der Parametertabelle\n*/\n\n\nINSERT INTO :lt_parameter VALUES ('GROUP_NUMBER', 5, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('INIT_TYPE', 1, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('DISTANCE_LEVEL',2, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('THREAD_RATIO', NULL, 0.1, NULL);\n\n--INSERT INTO :lt_parameter VALUES ('NORMALIZATION', 2, NULL, NULL);\n\n\n-- Weitere Parameter zum Experimentieren\n--INSERT INTO :lt_parameter VALUES ('GROUP_NUMBER_MIN', 4, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('GROUP_NUMBER_MAX', 10, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('CATEGORY_WEIGHTS', NULL, 0.5, NULL);\n--INSERT INTO :lt_parameter VALUES ('MAX_ITERATION', 100, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('EXIT_THRESHOLD', NULL, 1.0E-6, NULL);\n\nSELECT * FROM :lt_parameter;\n\n\n/*\n * Listing: Aufruf von K-Means\n *\n*/\n\nlt_churn = SELECT CUSTOMERID,\n\t\t\t\t  GEOGRAPHY,\n\t\t\t\t  AGE,\n\t\t\t\t  TENURE,\n\t\t\t\t  BALANCE,\n\t\t\t\t  NUMOFPRODUCTS,\n\t\t\t\t  ESTIMATEDSALARY\n\t\t\t\t  FROM CHURN WHERE BALANCE > 0;\n\n\nCALL _SYS_AFL.PAL_KMEANS(:lt_churn, \n                          :lt_parameter, \n                          lt_result, \n                          lt_centers, \n                          lt_model, \n                          lt_statistics, \n                          lt_placeholder);\n\n-- Optional: Ausgabe von Zuweisung (LT_RESULT) und Zentrumspunkten (LT_CENTERS)\n\n\nSELECT TOP 20 * FROM :lt_result;\n\nSELECT * FROM :lt_centers;\n\n-- Speichern in CLUSTER_RESULT\nDELETE FROM CLUSTER_RESULT WHERE RUN_ID = 1;\nINSERT INTO CLUSTER_RESULT  (select 1 as RUN_ID, CUSTOMERID, CLUSTER_ID, DISTANCE from :lt_result);\n\nEND;"},{"kind":1,"language":"markdown","value":"# Second configuration - Clustering with normalization by Age, Creditscore"},{"kind":2,"language":"saphanasql","value":"DO BEGIN\n\nDECLARE lt_parameter TABLE(\n        NAME VARCHAR (50),\n        INT_VALUE INTEGER,\n        DOUBLE_VALUE DOUBLE,\n        STRING_VALUE VARCHAR (100));\n\n-- Clustering mit PAL\n\n/*\n * Aufbau der Parametertabelle\n*/\n\n\nINSERT INTO :lt_parameter VALUES ('GROUP_NUMBER', 5, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('INIT_TYPE', 1, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('DISTANCE_LEVEL',2, NULL, NULL);\nINSERT INTO :lt_parameter VALUES ('THREAD_RATIO', NULL, 0.1, NULL);\n\nINSERT INTO :lt_parameter VALUES ('NORMALIZATION', 2, NULL, NULL);\n\n\n-- Weitere Parameter zum Experimentieren\n--INSERT INTO :lt_parameter VALUES ('GROUP_NUMBER_MIN', 4, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('GROUP_NUMBER_MAX', 10, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('CATEGORY_WEIGHTS', NULL, 0.5, NULL);\n--INSERT INTO :lt_parameter VALUES ('MAX_ITERATION', 100, NULL, NULL);\n--INSERT INTO :lt_parameter VALUES ('EXIT_THRESHOLD', NULL, 1.0E-6, NULL);\n\nSELECT * FROM :lt_parameter;\n\n\n/*\n * Listing: Aufruf von K-Means\n *\n*/\n\nlt_churn = SELECT CUSTOMERID,\n\t\t\t\t  AGE,\n                                  CREDITSCORE FROM CHURN;\n\n\nCALL _SYS_AFL.PAL_KMEANS(:lt_churn, \n                          :lt_parameter, \n                          lt_result, \n                          lt_centers, \n                          lt_model, \n                          lt_statistics, \n                          lt_placeholder);\n\n-- Optional: Ausgabe von Zuweisung (LT_RESULT) und Zentrumspunkten (LT_CENTERS)\n\n\nSELECT TOP 20 * FROM :lt_result;\n\nSELECT * FROM :lt_centers;\n\n-- Speichern in CLUSTER_RESULT\n\ndelete from CLUSTER_RESULT WHERE RUN_ID = 2;\ninsert into CLUSTER_RESULT  (select 2 as RUN_ID, CUSTOMERID, CLUSTER_ID, DISTANCE from :lt_result);\n\nEND;\n"},{"kind":1,"language":"markdown","value":"# Evaluation - Statistical computation"},{"kind":2,"language":"saphanasql","value":"DO BEGIN \n\nlt_customer_cluster = SELECT c.customerid, \n                             r.cluster_id, \n                             c.age, \n                             c.creditscore FROM CHURN as c JOIN cluster_result as r on c.CUSTOMERID = r.CUSTOMERID\n                             where r.RUN_ID = 2;\n\n--SELECT * FROM :lt_customer_cluster;\n\nlt_percentile = SELECT customerid, cluster_id, \n    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY age) OVER (PARTITION BY cluster_id) AS age_p25,\n    PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY age) OVER (PARTITION BY cluster_id) AS age_p50, \n    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY age) OVER (PARTITION BY cluster_id) AS age_p75, \n    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY CREDITSCORE) OVER (PARTITION BY cluster_id) AS creditscore_p25,\n    PERCENTILE_CONT(0.50) WITHIN GROUP (ORDER BY CREDITSCORE) OVER (PARTITION BY cluster_id) AS creditscore_p50,\n    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY CREDITSCORE) OVER (PARTITION BY cluster_id) AS creditscore_p75 from :lt_customer_cluster;\n     \n\nSELECT cluster_id, max(age_p25) as age_p25, \n                   max(age_p50) as age_p50,\n                   max(age_p75) as age_p75, \n                   max(creditscore_p25) as creditscore_p25, \n                   max(creditscore_p50) as creditscore_p50, \n                   max(creditscore_p75) as creditscore_p75 \n                   FROM :lt_percentile group by cluster_id order by cluster_id;\n\n\nEND;"}]}